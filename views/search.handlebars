<!DOCTYPE html>
<html>
<head>
  <title>HCI Project Portfolio</title>  
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Lora" />

  <script src="https://code.jquery.com/jquery.js"></script>  

  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">

  <!-- <link rel="stylesheet" href="css/searchCSS.css"> -->
  <link rel="stylesheet" href="css/navbar.css">
  <link rel="stylesheet" href="css/top-navbar.css">
  
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  


  


</head>   

<style>
* {
  box-sizing: border-box;
}
body {
  margin:2px;
  background-color: white;
  font-family: Lora;
}
.paragraph {
  margin:18px;
  font-size: 15px;
  font-family: Lora;
}
.jumbotron {
 margin-left:32px;
 margin-top:15px;
 font:30px;
 background-color: #f2f2f2;
}
h1 {
  font-size: 2.5em;
  padding: 10px;
}
.autocomplete {
  position: relative;
  display: inline-block;
}
#myInput {
  background-color: #f2f2f2;
  padding: 10px;
  font-size: 15px;
  margin-left: 6px;
  border: 1px solid black;
  width: 282px;
 
}
input[type=text] {
  background-color: #f2f2f2;
  width: 73%;
}
input[type=submit] {
  background-color: DodgerBlue;
  color: #fff;
  cursor: pointer;
}
.autocomplete-items {
  position: absolute;
  border: 1px solid #d4d4d4;
  border-bottom: none;
  border-top: none;
  z-index: 99;
  top: 100%;
  left: 0;
  right: 0;
}
.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: #fff; 
  border-bottom: 1px solid #d4d4d4; 
}
.autocomplete-items div:hover {
  background-color: #e9e9e9; 
}
.autocomplete-active {
  background-color: DodgerBlue !important; 
  color: #ffffff; 
}
.dropdown-menu {
  margin-right: 193px;
}
#filter {
 margin-left: 18px;
 border: 1px solid black;
}
#searchBtn {
 margin-left:3px;
 height: 43px;
 width:43px;
 border: 1px solid black;
 margin-bottom: 3px;
}
.helpr-section {
    
    background: #f6f6f6 url('https://png.pngtree.com/element_origin_min_pic/16/10/03/2057f253a700aac.jpg');
    background-position: 50% 65%;
    background-repeat: no-repeat;
    background-size: 100% 70;
    
}
.helpr-title {
    padding: 100px 0 60px;
    font-size: 40px;
    line-height: 25px;
    -webkit-text-shadow: 0 4px 6px rgba(0,0,0,.20);
    -moz-text-shadow: 0 4px 6px rgba(0,0,0,.20);
    text-shadow: 0 4px 6px rgba(0,0,0,.20);
    font-family: 'Lora', sans-serif;
    text-align: center;
    color: #555;
    margin: 0;
    position: relative;
}
.helpr-text {
    height: 600px;
}
</style>




<body>

  <div class="topnav">
    <p>Search</p>
  </div> 


  <section id = "home" class ="helpr-section">
    <div class = "container">
      <div class = "helpr-content" data-stellar-offset-parent="true">
        <div class= "helpr-text" data-wow-duration ="1s" data-wow-delay="0.5s">
          <div class ="webHomeTitle">
            <h1 class ="helpr-title">Start Connecting!</h1>

            <div class="autocomplete" style="width:350px;">
              <input id="myInput" type="text" name="searchbar" placeholder="Enter Name, Location, or Profession">



              <button id="searchBtn" type="button" class="btn btn-secondary btn-search" onclick="location.href='/searchresults/page_A'"><span class="glyphicon glyphicon-search" >&nbsp;</span> <span class="label-icon" ></span></button>


            </div>

          </div>
        </div>
      </div>
    </div>

  </section>




        <div class="icon-bar">
         <a href=/home><i class="fa fa-home"></i></a>
         <a class="active" href="/search"><i class="fa fa-search"></i></a>
         <a href="/messages"><i class="fa fa-commenting-o"></i></a>
         <a href="/myprofile"><i class="fa fa-user-circle"></i></a>
       </div>

       <script>
        function autocomplete(inp, arr) {
  /*the autocomplete function takes two arguments,
  the text field element and an array of possible autocompleted values:*/
  var currentFocus;
  /*execute a function when someone writes in the text field:*/
  inp.addEventListener("input", function(e) {
    var a, b, i, val = this.value;
    /*close any already open lists of autocompleted values*/
    closeAllLists();
    if (!val) { return false;}
    currentFocus = -1;
    /*create a DIV element that will contain the items (values):*/
    a = document.createElement("DIV");
    a.setAttribute("id", this.id + "autocomplete-list");
    a.setAttribute("class", "autocomplete-items");
    /*append the DIV element as a child of the autocomplete container:*/
    this.parentNode.appendChild(a);
    /*for each item in the array...*/
    for (i = 0; i < arr.length; i++) {
      /*check if the item starts with the same letters as the text field value:*/
      if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
        /*create a DIV element for each matching element:*/
        b = document.createElement("DIV");
        /*make the matching letters bold:*/
        b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
        b.innerHTML += arr[i].substr(val.length);
        /*insert a input field that will hold the current array item's value:*/
        b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
        /*execute a function when someone clicks on the item value (DIV element):*/
        b.addEventListener("click", function(e) {
          /*insert the value for the autocomplete text field:*/
          inp.value = this.getElementsByTagName("input")[0].value;
              /*close the list of autocompleted values,
              (or any other open lists of autocompleted values:*/
              closeAllLists();
            });
        a.appendChild(b);
      }
    }
  });
  /*execute a function presses a key on the keyboard:*/
  inp.addEventListener("keydown", function(e) {
    var x = document.getElementById(this.id + "autocomplete-list");
    if (x) x = x.getElementsByTagName("div");
    if (e.keyCode == 40) {
        /*If the arrow DOWN key is pressed,
        increase the currentFocus variable:*/
        currentFocus++;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 38) { //up
        /*If the arrow UP key is pressed,
        decrease the currentFocus variable:*/
        currentFocus--;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 13) {
        /*If the ENTER key is pressed, prevent the form from being submitted,*/
        e.preventDefault();
        if (currentFocus > -1) {
          /*and simulate a click on the "active" item:*/
          if (x) x[currentFocus].click();
        }
      }
    });
  function addActive(x) {
    /*a function to classify an item as "active":*/
    if (!x) return false;
    /*start by removing the "active" class on all items:*/
    removeActive(x);
    if (currentFocus >= x.length) currentFocus = 0;
    if (currentFocus < 0) currentFocus = (x.length - 1);
    /*add class "autocomplete-active":*/
    x[currentFocus].classList.add("autocomplete-active");
  }
  function removeActive(x) {
    /*a function to remove the "active" class from all autocomplete items:*/
    for (var i = 0; i < x.length; i++) {
      x[i].classList.remove("autocomplete-active");
    }
  }
  function closeAllLists(elmnt) {
    /*close all autocomplete lists in the document,
    except the one passed as an argument:*/
    var x = document.getElementsByClassName("autocomplete-items");
    for (var i = 0; i < x.length; i++) {
      if (elmnt != x[i] && elmnt != inp) {
        x[i].parentNode.removeChild(x[i]);
      }
    }
  }
  /*execute a function when someone clicks in the document:*/
  document.addEventListener("click", function (e) {
    closeAllLists(e.target);
  });
}
/*An array containing all the country names in the world:*/
var locations = ["San Diego","Baltimore","New York","Chicago","San Francisco"];
/*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
autocomplete(document.getElementById("myInput"), locations);
</script>




</body>
</html>
